{"version":3,"sources":["components/Users.jsx","components/socket.js","components/Chat.jsx","components/Home.jsx","components/Login.jsx","reduxstore/thunk.js","App.js","reduxstore/reducer.js","reduxstore/middleware.js","reduxstore/store.js","index.js"],"names":["Users","props","SetGeneralChat","dispatch","type","payload","isChannel","chatName","receiverId","SetUserChat","user","name","id","messages","newMessages","immer","draft","class","onClick","this","allusers","map","Component","connect","state","currentChat","CurrentChat","socket","io","isloggedin","console","log","on","useState","message","setMessage","content","sender","push","fontSize","each","index","onSubmit","e","preventDefault","to","emit","value","onChange","target","placeholder","style","color","history","params","useParams","chat","setChat","people","setPeople","useEffect","msg","time","custom","msgData","Date","required","logged","setUser","className","getState","login","width","for","marginRight","href","exact","path","component","Chat","Login","reducerFun","general","action","middleware","applyMiddleware","store","next","thunk","createStore","reducer","ReactDOM","render","StrictMode","stateStore","document","getElementById"],"mappings":"kPAOaA,EAAb,kDAEE,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAGPC,eAAiB,WAEhB,EAAKD,MAAME,SAAS,CAClBC,KAAM,eACNC,QAAS,CACPC,WAAW,EACXC,SAAU,UACVC,WAAY,OAXA,EAgBjBC,YAAc,SAAAC,GAUb,GATA,EAAKT,MAAME,SAAS,CAClBC,KAAM,eACNC,QAAS,CACPC,WAAW,EACXC,SAAUG,EAAKC,KACfH,WAAYE,EAAKE,OAIjB,EAAKX,MAAMY,SAASH,EAAKC,MAAM,CAEjC,IAAIG,EAAcC,YAAM,EAAKd,MAAMY,UAAU,SAAAG,GAC3CA,EAAMN,EAAKC,MAAQ,MAErB,EAAKV,MAAME,SAAS,CAClBC,KAAM,WACNC,QAASS,MAjCG,EAFpB,0CA0CE,WAAU,IAAD,WACP,OACE,mCACA,sBAAKG,MAAM,eAAX,UACE,qBAAKA,MAAM,eAAX,SACE,qBAAKA,MAAM,iBAAX,SACE,2CAGJ,sBAAKA,MAAM,aAAX,UACA,qBAAKA,MAAM,YAAYC,QAASC,KAAKjB,eAArC,SACc,sBAAKe,MAAM,cAAX,UACE,sBAAKA,MAAM,WAAX,UACG,IACD,cAAC,IAAD,IAAsB,OAExB,sBAAKA,MAAM,UAAX,UACE,0CACU,sBAAMA,MAAM,YAAZ,kBAEV,8EAIN,qBAAKA,MAAM,eAAX,SACV,qBAAKA,MAAM,iBAAX,SACE,4CAjBJ,UAoBGE,KAAKlB,aApBR,iBAoBG,EAAYmB,gBApBf,aAoBG,EAAsBC,KAAI,SAACX,GACtB,GAAI,EAAKT,MAAMS,MAAQA,EAAKC,KAC1B,OACE,qBAAKM,MAAM,YAA0BC,QAAS,kBAAM,EAAKT,YAAYC,IAArE,SACE,sBAAKO,MAAM,cAAX,UACE,sBAAKA,MAAM,WAAX,UACG,IACD,cAAC,IAAD,IAAsB,OAExB,sBAAKA,MAAM,UAAX,UACE,+BACGP,EAAKC,KADR,IACc,sBAAMM,MAAM,YAAZ,kBAEd,qCAAQP,EAAKE,aAVSF,EAAKE,mBA1ErD,GAA2BU,aAmGZC,eAAQ,SAAUC,EAAOvB,GACtC,MAAO,CACLS,KAAI,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAOd,KACbU,SAAQ,OAACI,QAAD,IAACA,OAAD,EAACA,EAAOJ,SAChBP,SAAQ,OAACW,QAAD,IAACA,OAAD,EAACA,EAAOX,SAChBY,YAAW,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAOE,eALTH,CAOZvB,G,iBC/GY2B,EADAC,IAAG,8C,QCkJHL,mBAAQ,SAACC,EAAOvB,GAC7B,MAAO,CACLS,KAAI,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAOd,KACbG,SAAQ,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAOX,SACjBO,SAAQ,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAOJ,SACjBS,WAAU,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAOK,WACnBJ,YAAW,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAOE,eANTH,EAxIf,SAActB,GAAQ,IAAD,EACnB6B,QAAQC,IAAI,SAAZ,OAAsB9B,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOY,UAC7Bc,EAAOK,GAAG,WAAW,SAACZ,GACpBU,QAAQC,IAAI,qBAAqB9B,GACjCA,EAAME,SAAS,CACbC,KAAM,QACNC,QAASe,OAIb,MAA8Ba,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAgDA,OA9CAR,EAAOK,GAAG,cAAc,SAACZ,GACvBU,QAAQC,IAAI,6BAA8BX,GAC1CnB,EAAME,SAAS,CACbC,KAAM,QACNC,QAASe,OAGbO,EAAOK,GAAG,eAAe,YAAoC,IAAjCI,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,OAAQ9B,EAAe,EAAfA,SACrCO,EAAcC,YAAMd,EAAMY,UAAU,SAACG,GACrCA,EAAMT,GACRS,EAAMT,GAAU+B,KAAK,CAAEF,UAASC,WAEhCrB,EAAMT,GAAY,CAAC,CAAE6B,UAASC,cAIlCpC,EAAME,SAAS,CACbC,KAAM,WACNC,QAASS,OA6BX,mCACE,sBAAKG,MAAM,YAAX,UACE,qBAAIA,MAAM,eAAV,qBAAkChB,EAAMS,QACxC,qBAAKO,MAAM,YAAX,SACE,sBAAKA,MAAM,YAAX,UACE,cAAC,EAAD,IACA,sBAAKA,MAAM,QAAX,UACE,+BACG,IACD,cAAC,IAAD,CAAmBsB,SAAU,UAF/B,OAGGtC,QAHH,IAGGA,GAHH,UAGGA,EAAOwB,mBAHV,aAGG,EAAoBlB,YAEvB,qBAAKU,MAAM,cAAX,SACE,cAAC,IAAD,WACQ,OAALhB,QAAK,IAALA,OAAA,EAAAA,EAAOY,SAAP,OAAgBZ,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOwB,YAAYlB,WAAnC,OACGN,QADH,IACGA,OADH,EACGA,EAAOY,SAASZ,EAAMwB,YAAYlB,UAAUc,KAC1C,SAACmB,EAAMC,GACL,OAAID,EAAKH,UAAL,OAAgBpC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOS,MAEvB,qBAAKO,MAAM,eAAX,SACE,sBAAKA,MAAM,WAAX,UACE,4BAAIuB,EAAKJ,UACT,uBAAMnB,MAAM,YAAZ,UACG,IACAuB,EAAKH,UACA,SAMZ,sBAAKpB,MAAM,eAAX,UACE,qBAAKA,MAAM,mBAAX,SACE,cAAC,IAAD,MAEF,qBAAKA,MAAM,eAAX,SACE,sBAAKA,MAAM,qBAAX,UACE,4BAAIuB,EAAKJ,UACT,uBAAMnB,MAAM,YAAZ,UACG,IACAuB,EAAKH,qBAStB,QAGR,qBAAKpB,MAAM,WAAX,SACE,qBAAKA,MAAM,kBAAX,SACE,uBAAMyB,SA/EF,SAACC,GACnBA,EAAEC,iBACF,IAAMvC,EAAU,CACd+B,QAASF,EACTW,GAAI5C,EAAMwB,YAAYnB,UAClBL,EAAMwB,YAAYlB,SAClBN,EAAMwB,YAAYjB,WACtB6B,OAAQpC,EAAMS,KACdH,SAAUN,EAAMwB,YAAYlB,SAC5BD,UAAWL,EAAMwB,YAAYnB,WAE/BqB,EAAOmB,KAAK,eAAgBzC,GAC5B,IAAMS,EAAcC,YAAMd,EAAMY,UAAU,SAACG,GACzCA,EAAMf,EAAMwB,YAAYlB,UAAU+B,KAAK,CACrCD,OAAQpC,EAAMS,KACd0B,QAASF,OAGbjC,EAAME,SAAS,CACbC,KAAM,WACNC,QAASS,IAEXqB,EAAW,KAyDG,UACE,uBACE/B,KAAK,OACLa,MAAM,YACNN,KAAK,MACLoC,MAAOb,EACPc,SAAU,SAACL,GAAD,OAAOR,EAAWQ,EAAEM,OAAOF,QACrCG,YAAY,mBAEd,wBAAQjC,MAAM,eAAd,SACE,cAAC,IAAD,CAAUkC,MAAO,CAAEC,MAAO,mC,eC/H1CzB,EAASC,IAAG,yBAkHHL,aAAQ,SAACC,EAAOvB,GAC7B,MAAO,CACLS,KAAI,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAOd,KACbmB,WAAU,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAOK,cAHRN,EAjHf,SAActB,GACY,GAApBA,EAAM4B,YACR5B,EAAMoD,QAAQf,KAAK,KAErBR,QAAQC,IAAI,WAAY9B,GACxB,IAAMqD,EAASC,cACf,EAA8BtB,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOuB,EAAP,KAAaC,EAAb,KACA,EAA4BxB,mBAAS,IAArC,mBAAOyB,EAAP,KAAeC,EAAf,KAwCA,OAvCA7B,QAAQC,IAAI,gBAAiByB,GAC7BI,qBAAU,WAERjC,EAAOK,GAAG,cAAc,SAACtB,GACvBoB,QAAQC,IAAI,6BAA8BrB,GAC1CiD,EAAUjD,MAGZiB,EAAOK,GAAG,WAAW,SAAC3B,GACpBoD,EAAQ,GAAD,mBAAKD,GAAL,CAAWnD,WA+BpB,mCACE,sBAAKY,MAAM,YAAX,UACE,qBAAIA,MAAM,eAAV,4BAAkChB,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAOS,QACzC,qBAAKO,MAAM,YAAX,SACE,sBAAKA,MAAM,YAAX,UACE,cAAC,EAAD,CAAOyC,OAAQA,IACf,sBAAKzC,MAAM,QAAX,UACA,mCAAM,YACJ,qBAAKA,MAAM,cAAX,SAEGuC,EAAKnC,KAAI,SAACwC,GACT,OAAIA,EAAIjD,KAAOX,EAAMS,KAAKE,GAEtB,qBAAKK,MAAM,eAAX,SACE,sBAAKA,MAAM,WAAX,UACE,4BAAI4C,EAAIA,MACR,uBAAM5C,MAAM,YAAZ,cAA0B4C,EAAIC,QAAa,QAHhBD,EAAIjD,IASnC,sBAAKK,MAAM,eAAX,UACE,qBAAKA,MAAM,mBAAX,SACE,cAAC,IAAD,MAEF,qBAAKA,MAAM,eAAX,SACE,sBAAKA,MAAM,qBAAX,UACE,kCAAK4C,EAAIA,OACT,sBAAM5C,MAAM,YAAZ,SAAyB4C,EAAIC,cAPJD,EAAIjD,SAe3C,qBAAKK,MAAM,WAAX,SACE,qBAAKA,MAAM,kBAAX,SACE,uBAAMyB,SAlEF,SAACC,GAEnB,GADAA,EAAEC,iBACE3C,EAAM8D,OAAQ,CAChBjC,QAAQC,IAAI,SAASuB,EAAO1C,IAC5BkB,QAAQC,IAAIG,GACZ,IAAM8B,EAAU,CAChBH,IAAK3B,EACLtB,GAAIX,EAAMS,KAAKE,GACfkD,KAAM,IAAIG,KACVpB,GAAIS,EAAO1C,IAEbe,EAAOmB,KAAK,iBAAkBkB,OAEvB,CACLlC,QAAQC,IAAIG,GACZ,IAAM8B,EAAU,CACdH,IAAK3B,EACLtB,GAAIX,EAAMS,KAAKE,GACfkD,KAAM,IAAIG,MAEZtC,EAAOmB,KAAK,UAAWkB,GAGzB7B,EAAW,KA2CG,UACE,uBACE/B,KAAK,OACLO,KAAK,UACLuC,YAAY,eACZH,MAAOb,EACPc,SAAU,SAACL,GACTR,EAAWQ,EAAEM,OAAOF,QAEtBmB,UAAQ,IAEV,wBAAQjD,MAAM,eAAd,SACE,cAAC,IAAD,CAAUkC,MAAO,CAAEC,MAAO,mCCxDjC7B,mBAAQ,SAASC,EAAMvB,GAClC,MAAO,CACHkE,OAAM,OAAE3C,QAAF,IAAEA,OAAF,EAAEA,EAAOK,WACfhB,SAAQ,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAOX,YAHVU,EA/Cf,SAAetB,GACX,MAAwBgC,qBAAxB,mBAAOvB,EAAP,KAAa0D,EAAb,KA4BA,OACI,qBAAKC,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACG,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACA,uBAAM3B,SAnBE,SAACC,GAChBA,EAAEC,iBACFjB,EAAOmB,KAAK,OAAOpC,GACnBiB,EAAOmB,KAAK,YAAY,WACxB7C,EAAME,SCxBP,SAAgBO,GACnB,OAAO,SAASP,EAAUmE,GASpBnE,EAAS,CACPC,KAAK,QACLC,QAASK,KDYE6D,CAAM7D,IAGrBT,EAAMoD,QAAQf,KAAK,UAYkBa,MAAO,CAACqB,MAAM,KAA5C,UACK,oBAAIH,UAAU,cAAd,oBACA,uBAAOI,IAAI,WAAWtB,MAAO,CAACZ,SAAS,GAAImC,YAAY,IAAvD,wBACA,uBAAO1B,SAAU,SAACL,GAAD,OAAMyB,EAAQzB,EAAEM,OAAOF,QAAQ3C,KAAK,OAAOiE,UAAU,eAAenB,YAAY,aACjG,uBACA,wBAASjC,MAAM,4BAAf,+B,QEVLM,mBAAQ,SAASC,EAAMvB,GAEpC,OADA6B,QAAQC,IAAI,QAAQP,GACb,CACLK,WAAU,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAOK,cAHRN,EAtBf,SAAatB,GAEX,OAEE,qCACE,qBAAKoE,UAAU,kCAAf,SACE,mBAAGA,UAAU,eAAeM,KAAK,IAAjC,gCAIF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAY7E,EAAM4B,WAAYkD,EAAOC,IAC/D,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,IAAIC,UAAWE,a,gCCa1BC,EAnCI,WAAiD,IAAhDzD,EAA+C,uDAAvC,CAACX,SAAW,CAACqE,QAAS,KAAMC,EAAW,uCAC/D,OAAOA,EAAO/E,MACV,IAAK,QAUD,OATA0B,QAAQC,IAAI,aAAaoD,IACzB3D,EAAK,eAAOA,IACP,YAAiB,EACtBA,EAAK,KAAW2D,EAAO9E,QACvBmB,EAAK,YAAkB,CACnBlB,WAAW,EACXC,SAAU,UACVC,WAAY,IAETgB,EAEX,IAAK,eAID,OAHAA,EAAK,eAAOA,IACP,YAAkB2D,EAAO9E,QAEvBmB,EAEX,IAAK,WAID,OAHAM,QAAQC,IAAI,YAAYoD,IACxB3D,EAAK,eAAOA,IACP,SAAe2D,EAAO9E,QACpBmB,EAEX,IAAK,QAGD,OAFAA,EAAK,eAAOA,IACP,SAAe2D,EAAO9E,QACpBmB,IC1BZ,I,QCAH4D,EAAaC,aDAG,SAAAC,GAAK,OAAE,SAAAC,GAAI,OAAE,SAAAJ,GAK7B,OAFaI,EAAKJ,OCHmBK,KAE1BC,cAAYC,EAAQN,GCAnCO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,CAAUP,MAAOQ,EAAjB,SACE,cAAC,EAAD,QAGFC,SAASC,eAAe,U","file":"static/js/main.7f88228e.chunk.js","sourcesContent":["// import React, { useEffect, useState } from \"react\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport immer from 'immer'\nimport React, { Component } from 'react'\n\nexport class Users extends Component {\n\n  constructor(props){\n    super(props)\n  }\n\n   SetGeneralChat = () => {\n    // console.log(\"room set\")\n    this.props.dispatch({\n      type: \"CURRENT CHAT\",\n      payload: {\n        isChannel: true,\n        chatName: \"general\",\n        receiverId: \"\"\n      }\n    })\n  }\n\n   SetUserChat = user => {\n    this.props.dispatch({\n      type: \"CURRENT CHAT\",\n      payload: {\n        isChannel: false,\n        chatName: user.name,\n        receiverId: user.id\n      }\n    })\n    //  console.log(\"checkkkk......\",this.props.currentChat.chatName)\n    if(!this.props.messages[user.name]){\n      // console.log(\"set krunnn....\")\n      let newMessages = immer(this.props.messages, draft => {\n        draft[user.name] = []\n      })\n      this.props.dispatch({\n        type: \"MESSAGES\",\n        payload: newMessages\n      })\n      // console.log(\"user set\",newMessages)\n    }\n   \n    \n  }\n  render() {\n    return (\n      <>\n      <div class=\"inbox_people\">\n        <div class=\"headind_srch\">\n          <div class=\"recent_heading\">\n            <h4>Group</h4>\n          </div>\n        </div>\n        <div class=\"inbox_chat\">\n        <div class=\"chat_list\" onClick={this.SetGeneralChat}>\n                      <div class=\"chat_people\">\n                        <div class=\"chat_img\">\n                          {\" \"}\n                          <AccountCircleIcon />{\" \"}\n                        </div>\n                        <div class=\"chat_ib\">\n                          <h5>\n                            General <span class=\"chat_date\">0</span>\n                          </h5>\n                          <p>Messages on this receives by everyone</p>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"headind_srch\">\n          <div class=\"recent_heading\">\n            <h4>Online</h4>\n          </div>\n        </div>\n          {this.props?.allusers?.map((user) => {\n                if (this.props.user != user.name) {\n                  return (\n                    <div class=\"chat_list\" key={user.id} onClick={() => this.SetUserChat(user)}>\n                      <div class=\"chat_people\">\n                        <div class=\"chat_img\">\n                          {\" \"}\n                          <AccountCircleIcon />{\" \"}\n                        </div>\n                        <div class=\"chat_ib\">\n                          <h5>\n                            {user.name} <span class=\"chat_date\">0</span>\n                          </h5>\n                          <p>ID: {user.id}</p>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                }\n              })\n            }\n        </div>\n      </div>\n    </>\n    )\n  }\n}\n\nexport default connect(function (state, props) {\n  return {\n    user: state?.user,\n    allusers:state?.allusers,\n    messages:state?.messages,\n    currentChat: state?.CurrentChat\n  };\n})(Users);\n","import io from 'socket.io-client'\nconst socket = io('https://ChatApp-Backend.arishazmat.repl.co')\nexport default socket","import React, { useEffect, useRef, useState } from \"react\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport Users from \"./Users\";\nimport { connect } from \"react-redux\";\nimport socket from \"./socket\";\nimport immer from \"immer\";\nimport ScrollMePlease from \"react-scrollable-feed\";\n\n// const socketRef = useRef()\n\nfunction Chat(props) {\n  console.log(\"yrssss\", props?.messages);\n  socket.on(\"newuser\", (allusers) => {\n    console.log(\"asdasdasdsadasdasd\",props)\n    props.dispatch({\n      type: \"USERS\",\n      payload: allusers,\n    });\n  });\n\n  const [message, setMessage] = useState(\"\");\n\n  socket.on(\"new-client\", (allusers) => {\n    console.log(\"new online user found.....\", allusers);\n    props.dispatch({\n      type: \"USERS\",\n      payload: allusers,\n    });\n  });\n  socket.on(\"new message\", ({ content, sender, chatName }) => {\n    const newMessages = immer(props.messages, (draft) => {\n      if (draft[chatName]) {\n        draft[chatName].push({ content, sender });\n      } else {\n        draft[chatName] = [{ content, sender }];\n      }\n    });\n    // console.log(\"new message received\",newMessages)\n    props.dispatch({\n      type: \"MESSAGES\",\n      payload: newMessages,\n    });\n  });\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    const payload = {\n      content: message,\n      to: props.currentChat.isChannel\n        ? props.currentChat.chatName\n        : props.currentChat.receiverId,\n      sender: props.user,\n      chatName: props.currentChat.chatName,\n      isChannel: props.currentChat.isChannel,\n    };\n    socket.emit(\"send message\", payload);\n    const newMessages = immer(props.messages, (draft) => {\n      draft[props.currentChat.chatName].push({\n        sender: props.user,\n        content: message,\n      });\n    });\n    props.dispatch({\n      type: \"MESSAGES\",\n      payload: newMessages,\n    });\n    setMessage(\"\");\n  };\n  return (\n    <>\n      <div class=\"container\">\n        <h3 class=\" text-center\">Welcome {props.user}</h3>\n        <div class=\"messaging\">\n          <div class=\"inbox_msg\">\n            <Users />\n            <div class=\"mesgs\">\n              <h4>\n                {\" \"}\n                <AccountCircleIcon fontSize={\"large\"} />\n                {props?.currentChat?.chatName}\n              </h4>\n              <div class=\"msg_history\">\n                <ScrollMePlease>\n                  {props?.messages[props?.currentChat.chatName]\n                    ? props?.messages[props.currentChat.chatName].map(\n                        (each, index) => {\n                          if (each.sender === props?.user) {\n                            return (\n                              <div class=\"outgoing_msg\">\n                                <div class=\"sent_msg\">\n                                  <p>{each.content}</p>\n                                  <span class=\"time_date\">\n                                    {\" \"}\n                                    {each.sender}\n                                  </span>{\" \"}\n                                </div>\n                              </div>\n                            );\n                          } else {\n                            return (\n                              <div class=\"incoming_msg\">\n                                <div class=\"incoming_msg_img\">\n                                  <AccountCircleIcon />\n                                </div>\n                                <div class=\"received_msg\">\n                                  <div class=\"received_withd_msg\">\n                                    <p>{each.content}</p>\n                                    <span class=\"time_date\">\n                                      {\" \"}\n                                      {each.sender}\n                                    </span>\n                                  </div>\n                                </div>\n                              </div>\n                            );\n                          }\n                        }\n                      )\n                    : \" \"}\n                </ScrollMePlease>\n              </div>\n              <div class=\"type_msg\">\n                <div class=\"input_msg_write\">\n                  <form onSubmit={sendMessage}>\n                    <input\n                      type=\"text\"\n                      class=\"write_msg\"\n                      name=\"msg\"\n                      value={message}\n                      onChange={(e) => setMessage(e.target.value)}\n                      placeholder=\"Type a message\"\n                    />\n                    <button class=\"msg_send_btn\">\n                      <SendIcon style={{ color: \"#fff\" }} />\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default connect((state, props) => {\n  return {\n    user: state?.user,\n    messages: state?.messages,\n    allusers: state?.allusers,\n    isloggedin: state?.isloggedin,\n    currentChat: state?.CurrentChat,\n  };\n})(Chat);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport Users from \"./Users\";\nimport { connect } from \"react-redux\";\nimport io from \"socket.io-client\";\nimport { useParams } from \"react-router\";\nconst socket = io(\"http://localhost:7000\");\nfunction Chat(props) {\n  if (props.isloggedin != true) {\n    props.history.push(\"/\");\n  }\n  console.log(\"chatssss\", props);\n  const params = useParams()\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const [people, setPeople] = useState([]);\n  console.log(\"chatttttsssss\", chat);\n  useEffect(() => {\n\n    socket.on(\"new-client\", (user) => {\n      console.log(\"new online user found.....\", user);\n      setPeople(user);\n    });\n\n    socket.on(\"message\", (payload) => {\n      setChat([...chat, payload]);\n    });\n  });\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (props.custom) {\n      console.log(\"parmas\",params.id)\n      console.log(message);\n      const msgData = {\n      msg: message,\n      id: props.user.id,\n      time: new Date(),\n      to: params.id\n    };\n    socket.emit(\"custom-message\", msgData);\n\n    } else {\n      console.log(message);\n      const msgData = {\n        msg: message,\n        id: props.user.id,\n        time: new Date(),\n      };\n      socket.emit(\"message\", msgData);\n    }\n\n    setMessage(\"\");\n  };\n\n  return (\n    <>\n      <div class=\"container\">\n        <h3 class=\" text-center\">Welcome {props?.user}</h3>\n        <div class=\"messaging\">\n          <div class=\"inbox_msg\">\n            <Users people={people} />\n            <div class=\"mesgs\">\n            <h4> {\"Public\"}</h4>\n              <div class=\"msg_history\">\n                \n                {chat.map((msg) => {\n                  if (msg.id === props.user.id) {\n                    return (\n                      <div class=\"outgoing_msg\" key={msg.id}>\n                        <div class=\"sent_msg\">\n                          <p>{msg.msg}</p>\n                          <span class=\"time_date\"> {msg.time}</span>{\" \"}\n                        </div>\n                      </div>\n                    );\n                  } else {\n                    return (\n                      <div class=\"incoming_msg\" key={msg.id}>\n                        <div class=\"incoming_msg_img\">\n                          <AccountCircleIcon />\n                        </div>\n                        <div class=\"received_msg\">\n                          <div class=\"received_withd_msg\">\n                            <p> {msg.msg}</p>\n                            <span class=\"time_date\">{msg.time}</span>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n              <div class=\"type_msg\">\n                <div class=\"input_msg_write\">\n                  <form onSubmit={sendMessage}>\n                    <input\n                      type=\"text\"\n                      name=\"message\"\n                      placeholder=\"Type message\"\n                      value={message}\n                      onChange={(e) => {\n                        setMessage(e.target.value);\n                      }}\n                      required\n                    ></input>\n                    <button class=\"msg_send_btn\">\n                      <SendIcon style={{ color: \"#fff\" }} />\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default connect((state, props) => {\n  return {\n    user: state?.user,\n    isloggedin: state?.isloggedin,\n  };\n})(Chat);\n","import React, { useEffect, useState } from 'react'\nimport {connect} from 'react-redux'\nimport socket from './socket'\nimport {login} from '../reduxstore/thunk'\nimport immer from 'immer'\nfunction Login(props) {    \n    const [user, setUser] = useState(); \n    // const [yourID, setYourID] = useState()\n    // console.log(\"login props\",props)\n    function joinCallback(messages,room){\n        console.log(\"aaaa\",messages,room)\n        const newMessages = immer(messages, draft => {\n            draft[room] = room\n        })\n        props.dispatch({\n            type:\"MESSAGE\",\n            payload: newMessages\n        })\n    }\n\n    let submitHandle = (e) =>{\n        e.preventDefault()\n        socket.emit(\"join\",user)\n        socket.emit('join room','general')\n        props.dispatch(login(user))\n        // socket.emit(\"Join\",userData)\n        \n        props.history.push('/chat')\n       \n    }\n        \n    \n\n   \n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n               <div className=\"col-md-3\"></div>\n               <div className=\"col-md-6\">\n               <form onSubmit={submitHandle} style={{width:500}}>\n                    <h2 className=\"text-center\">Hop In</h2>\n                    <label for=\"Username\" style={{fontSize:20, marginRight:10}}>Username: </label>\n                    <input onChange={(e) =>setUser(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Username\"/>\n                    <br/>\n                    <button  class=\"bth btn-dark form-control\">Join</button>\n                </form>\n               </div>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(function(state,props){\n    return {\n        logged: state?.isloggedin,\n        messages: state?.messages\n    }\n})(Login)\n","export function login (user){\n    return function(dispatch, getState){\n        // dispatch({\n        //     type: \"CURRENT CHAT\",\n        //     payload: {\n        //       isChannel: true,\n        //       chatName: \"general\",\n        //       receiverId: \"\"\n        //     }\n        //   })\n          dispatch({\n            type:\"ENTER\",\n            payload: user\n        })\n    }\n}\n","import React from \"react\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport { connect } from \"react-redux\";\nimport io from 'socket.io-client'\nimport { BrowserRouter, Route , useHistory} from \"react-router-dom\";\n\n\n\nfunction App(props) {\n  \n  return (\n    \n    <>\n      <nav className=\"navbar navbar-dark bg-dark p-2 \">\n        <a className=\"navbar-brand\" href=\"#\">\n          Chat Application\n        </a>\n      </nav>\n      <BrowserRouter>\n        <Route exact path=\"/chat\" component={ props.isloggedin? Chat : Login }></Route>\n        <Route exact path=\"/\" component={Login}></Route>\n      </BrowserRouter>\n      {/* <Home/> */}\n        {/* {\n          props.isloggedin?  <Home/> :  <Login/> \n        } */}\n    </>\n  );\n}\n\nexport default connect(function(state,props){\n  console.log(\"state\",state)\n  return {\n    isloggedin: state?.isloggedin\n  }\n})(App);\n","import React from 'react'\n\nconst reducerFun = (state = {messages : {general: []}}, action) => {\n    switch(action.type){\n        case \"ENTER\":{ \n            console.log(\"hit meeeee\",action)\n            state = {...state}\n            state[\"isloggedin\"] = true \n            state[\"user\"] = action.payload\n            state['CurrentChat'] = {\n                isChannel: true,\n                chatName: \"general\",\n                receiverId: \"\"\n              }\n            return state\n        }\n        case \"CURRENT CHAT\":{\n            state = {...state}\n            state['CurrentChat'] = action.payload\n            // console.log(\"ressducer....\",state[\"CurrentChat\"])\n            return state\n        }\n        case \"MESSAGES\": {\n            console.log(\"hahahhhaa\",action)\n            state = {...state}\n            state['messages'] = action.payload\n            return state\n        }\n        case \"USERS\": {\n            state = {...state}\n            state[\"allusers\"] = action.payload\n            return state\n        }\n        \n    }\n}\n\nexport default reducerFun\n","export function FirstMiddleWare(store) {\n  return function (next) {\n    return function (action) {};\n  };\n} //ES6\nexport let logger = store=>next=>action=>{\n\n    // console.log(\"Before Action \" , action.type ,store.getState())\n    var result = next(action)\n    // console.log(\"After Action store state is\" , store.getState())\n    return result\n}","import {createStore, applyMiddleware} from 'redux'\nimport reducer from './reducer'\nimport {logger} from \"./middleware\"\nimport thunk from 'redux-thunk'\n\nvar middleware = applyMiddleware(logger, thunk)\n\nexport default createStore(reducer,middleware)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.bundle'\nimport stateStore from './reduxstore/store'\nimport {Provider} from 'react-redux'\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={stateStore}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}